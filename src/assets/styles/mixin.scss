@charset "UTF-8";

@import "variables";
//-----------------------------------------------------
// mixin scss
// 包括常用的mixin, %, @function 及辅助的btn和背景图片icon
// mixin，通过@include调用，样式通过拷贝的方式使用，尤其适用于传递参数
// %，通过@extend调用，样式通过组合申明的方式使用，适用于不传参数的代码片段
// @function，返回一个值，用于调用
//-----------------------------------------------------

// mixin & %
// 既定义了mixin也定义了%，根据需求使用@include或@extend调用
//-----------------------------------------------------

// clearfix
@mixin clearfix($extend: true) {
    @if $extend {
        @extend %clearfix;
    }
    @else {
        &:before,
        &:after {
            content: "";
            display: table;
        }
        &:after {
            clear: both;
        }
    }
}

%clearfix {
    @include clearfix(false);
}

// Hide from both screenreaders and browsers: h5bp.com/u
// 既隐藏于视觉也隐藏于屏幕浏览器
@mixin hidden($extend: true) {
    @if $extend {
        @extend %hidden;
    }
    @else {
        display: none !important;
        visibility: hidden;
    }
}

%hidden {
    @include hidden(false);
}

// Hide only visually, but have it available for screenreaders
// 只隐藏于视觉，屏幕浏览器可以阅读
@mixin hidden-visually($extend: true) {
    @if $extend {
        @extend %visually-hidden;
    }
    @else {
        position: absolute;
        clip: rect(1px, 1px, 1px, 1px); //standard
    }
}

%hidden-visually {
    @include hidden-visually(false);
}

// fixed top & bottom
@mixin fixed($pos: 0) {
    position: fixed;
    left: 0;
    right: 0;
    margin: 0 auto;
    @if $pos == bottom {
        bottom: 0;
    }
    @else {
        top: $pos;
    }
}

%fixed-top {
    @include fixed;
}

%fixed-bottom {
    @include fixed($pos: bottom);
}

// disabled
// 禁用样式，加!important
@mixin disabled($bgColor: #e6e6e6, $textColor: #ababab, $borderColor: false) {
    background-color: $bgColor !important;
    color: $textColor !important;
    cursor: default !important;
    @if $borderColor {
        border: 1px solid $borderColor;
    }
}

%disabled {
    @include disabled;
}


// mixin
// 只定义了mixin，所以只能通过@include来调用
//-----------------------------------------------------

@mixin radius($px) {
    -moz-border-radius: $px;
    -webkit-border-radius: $px;
    border-radius: $px;
}

@mixin rotate($deg) {
    -webkit-transform: rotate($deg);
    -moz-transform: rotate($deg);
    -ms-transform: rotate($deg);
    transform: rotate($deg);
}

@mixin color($color){
    color: $color;
    &:active {
        color: $color;
    }
    &:visited{
        color: $color;
    }
}

// table 等分
@mixin equal-table($children: li) {
    display: table;
    table-layout: fixed;
    width: 100%;
    $childrenEle: li div p a span strong;
    @if index($childrenEle, $children) {
        #{$children} {
            display: table-cell;
        }
    }
    @else {
        .#{$children} {
            display: table-cell;
        }
    }
}

// translate center
@mixin center-translate($direction: both) {
    position: absolute;
    @if $direction == both {
        top: 50%;
        left: 50%;
        transform: translate3d(-50%, -50%, 0);
    }
    @else if $direction == x {
        left: 50%;
        transform: translate3d(-50%, 0, 0);
    }
    @else if $direction == y {
        top: 50%;
        transform: translate3d(0, -50%, 0);
    }
}

// triangle 三角箭头
%triangle-basic {
    content: "";
    height: 0;
    width: 0;
    overflow: hidden;
}

@mixin triangle($direction: top, $borderWidth: 1px, $borderColor: $borderColor) {
    @extend %triangle-basic;
    @if $direction == top {
        border-bottom: $borderWidth solid $borderColor;
        border-left: $borderWidth dashed transparent;
        border-right: $borderWidth dashed transparent;
    }
    @else if $direction == right {
        border-left: $borderWidth solid $borderColor;
        border-top: $borderWidth dashed transparent;
        border-bottom: $borderWidth dashed transparent;
    }
    @else if $direction == bottom {
        border-top: $borderWidth solid $borderColor;
        border-left: $borderWidth dashed transparent;
        border-right: $borderWidth dashed transparent;
    }
    @else if $direction == left {
        border-right: $borderWidth solid $borderColor;
        border-top: $borderWidth dashed transparent;
        border-bottom: $borderWidth dashed transparent;
    }
}

// arrow 方向箭头
@mixin arrow($size: 18px, $direction: right, $borderWidth: 2px, $borderColor: $borderColor) {
    display: inline-block;
    vertical-align: middle;
    width: $size;
    height: $size;
    @if $direction == top {
        border-top: $borderWidth solid $borderColor;
        border-right: $borderWidth solid $borderColor;
        transform: rotate(-45deg);
    }
    @else if $direction == right {
        border-top: $borderWidth solid $borderColor;
        border-right: $borderWidth solid $borderColor;
        transform: rotate(45deg);
    }
    @else if $direction == bottom {
        border-left: $borderWidth solid $borderColor;
        border-bottom: $borderWidth solid $borderColor;
        transform: rotate(-45deg);
    }
    @if $direction == left {
        border-left: $borderWidth solid $borderColor;
        border-bottom: $borderWidth solid $borderColor;
        transform: rotate(45deg);
    }
}

// %
// 只定义了%，所以只能通过@extend来调用
//-----------------------------------------------------

// Text overflow
// 元素可以设置宽度才可应用省略号
%ellipsis {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// 等分列
// 可以使用equal-table，默认子元素为li
%equal-col {
    @include equal-table;
}

// item arrow, 右侧箭头跳转指向
%item-arrow {
    &::after {
        content: "";
        @include arrow;
        position: absolute;
        right: 30px;
        top: 50%;
        -webkit-transform: rotate(45deg) translateY(-50%);
        transform: rotate(45deg) translateY(-50%);
    }
}


// 页面统一宽度，居中显示
%w {
    width: 1100px;
    margin: 0 auto;
}
// 图片替换文字
%text-hide {
    height: 0;
    width: 0;
    font-size: 0;
    text-indent: -9999px;
    overflow: hidden;
}
%text-hidden {
    display: block;
    text-indent: -9999px;
}
